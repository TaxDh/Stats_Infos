setwd("C:/Users/kf891141/Desktop/Stats_Infos/Cours11")
# exemple normal (moyenne et variance inconnues)
# hyperparamètres
nu <- 0
tau2 <- 1
alpha <- 3
beta <- 1
# observation X
X <- rnorm(1, mean=rnorm(1, nu, tau2), sd=sqrt(1/rgamma(1, alpha, beta)))
# taille échantillonnale désirée
m <- 1000
# initialisation de l'échantillon, et choix du point de départ
ech <- matrix(0, nrow=m+1, ncol=2)
ech[1,] <- c(0, 1)
# algorithme
for(t in 1:m){
# génération de mu conditionnelle à la valeur de sig2 précédente
var.tmp <- 1 / (1/tau2 + 1/ech[t,2])
moy.tmp <- (nu/tau2 + X/ech[t,2]) * var.tmp
mu <- rnorm(1, mean=moy.tmp, sd=sqrt(var.tmp))
# génération de sig2 conditionnelle à la valeur de mu juste obtenue
sig2 <- 1 / rgamma(1, shape=alpha+1/2, rate=beta+(mu-X)^2/2)
ech[t+1,] <- c(mu, sig2)
}
plot(ech)
# taille échantillonnale désirée
m <- 10000
# initialisation de l'échantillon, et choix du point de départ
ech <- matrix(0, nrow=m+1, ncol=2)
ech[1,] <- c(0, 1)# mu = 0, sig2 = 1
# algorithme
for(t in 1:m){
# génération de mu conditionnelle à la valeur de sig2 précédente
var.tmp <- 1 / (1/tau2 + 1/ech[t,2])
moy.tmp <- (nu/tau2 + X/ech[t,2]) * var.tmp
mu <- rnorm(1, mean=moy.tmp, sd=sqrt(var.tmp))
# génération de sig2 conditionnelle à la valeur de mu juste obtenue
sig2 <- 1 / rgamma(1, shape=alpha+1/2, rate=beta+(mu-X)^2/2)
ech[t+1,] <- c(mu, sig2)
}
plot(ech)
# taille échantillonnale désirée
m <- 1000
# initialisation de l'échantillon, et choix du point de départ
ech <- matrix(0, nrow=m+1, ncol=2)
ech[1,] <- c(0, 1)# mu = 0, sig2 = 1
# algorithme
for(t in 1:m){
# génération de mu conditionnelle à la valeur de sig2 précédente
var.tmp <- 1 / (1/tau2 + 1/ech[t,2])
moy.tmp <- (nu/tau2 + X/ech[t,2]) * var.tmp
mu <- rnorm(1, mean=moy.tmp, sd=sqrt(var.tmp))
# génération de sig2 conditionnelle à la valeur de mu juste obtenue
sig2 <- 1 / rgamma(1, shape=alpha+1/2, rate=beta+(mu-X)^2/2)
ech[t+1,] <- c(mu, sig2)
}
plot(ech)
plot(ech[,1], type="l")
# taille échantillonnale désirée
m <- 100
# initialisation de l'échantillon, et choix du point de départ
ech <- matrix(0, nrow=m+1, ncol=2)
ech[1,] <- c(0, 1)# mu = 0, sig2 = 1
# algorithme
for(t in 1:m){
# génération de mu conditionnelle à la valeur de sig2 précédente
var.tmp <- 1 / (1/tau2 + 1/ech[t,2])
moy.tmp <- (nu/tau2 + X/ech[t,2]) * var.tmp
mu <- rnorm(1, mean=moy.tmp, sd=sqrt(var.tmp))
# génération de sig2 conditionnelle à la valeur de mu juste obtenue
sig2 <- 1 / rgamma(1, shape=alpha+1/2, rate=beta+(mu-X)^2/2)
ech[t+1,] <- c(mu, sig2)
}
plot(ech)
plot(ech[,2], type="l")
#meilleur avec m <- 100
plot(ech[,1], type="l")#toutes les observations des mu
plot(ech[,2], type="l")
# exemple uniforme sur deux domaines à peine (ou pas du tout) alignés: (0, 1) x (0, 1) et (1.5, 2.5) x (a, a+1)
# représentation graphique du domaine
a <- .99
plot(NULL, NULL, xlim=c(0, 3), ylim=c(0, 2.5), xlab="x", ylab="y")
ptp <- cbind(c(0, 1, 1, 0), c(0, 0, 1, 1))
polygon(ptp[,1], ptp[,2], col = "grey")
ptp <- cbind(1.5 + c(0, 1, 1, 0), a + c(0, 0, 1, 1))
polygon(ptp[,1], ptp[,2], col = "grey")
# taille échantillonnale désirée
m <- 1000
# initialisation de l'échantillon, et choix du point de départ
ech <- matrix(0, nrow=m+1, ncol=2)
ech[1,] <- c(.5, .5)
# algorithme
for(t in 1:m){
# génération de x conditionnelle à la valeur de y précédente
y.tmp <- ech[t,2]
if(y.tmp < a) x <- runif(1, min=0, max=1)
else if(y.tmp > 1) x <- runif(1, min=1.5, max=2.5)
else{
u <- runif(1)
if(u <= .5) x <- runif(1, min=0, max=1)
else x <- runif(1, min=1.5, max=2.5)
}
# génération de y conditionnelle à la valeur de x juste obtenue
if(x <= 1) y <- runif(1, min=0, max=1)
else y <- runif(1, min=a, max=a+1)
ech[t+1,] <- c(x, y)
}
plot(ech, xlim=c(0, 3), ylim=c(0, 2.5))
plot(ech[,1], type="l")
# taille échantillonnale désirée
#m <- 1000
m <- 100000
# initialisation de l'échantillon, et choix du point de départ
ech <- matrix(0, nrow=m+1, ncol=2)
ech[1,] <- c(.5, .5)
# algorithme
for(t in 1:m){
# génération de x conditionnelle à la valeur de y précédente
y.tmp <- ech[t,2]
if(y.tmp < a) x <- runif(1, min=0, max=1)
else if(y.tmp > 1) x <- runif(1, min=1.5, max=2.5)
else{
u <- runif(1)
if(u <= .5) x <- runif(1, min=0, max=1)
else x <- runif(1, min=1.5, max=2.5)
}
# génération de y conditionnelle à la valeur de x juste obtenue
if(x <= 1) y <- runif(1, min=0, max=1)
else y <- runif(1, min=a, max=a+1)
ech[t+1,] <- c(x, y)
}
plot(ech, xlim=c(0, 3), ylim=c(0, 2.5))
plot(ech[,1], type="l")
plot(ech[,2], type="l")
# taille échantillonnale désirée
m <- 1000
# initialisation de l'échantillon, et choix du point de départ
ech <- matrix(0, nrow=m+1, ncol=2)
ech[1,] <- c(.5, .5)
# algorithme
for(t in 1:m){
# génération de x conditionnelle à la valeur de y précédente
y.tmp <- ech[t,2]
if(y.tmp < a) x <- runif(1, min=0, max=1)
else if(y.tmp > 1) x <- runif(1, min=1.5, max=2.5)
else{
u <- runif(1)
if(u <= .5) x <- runif(1, min=0, max=1)
else x <- runif(1, min=1.5, max=2.5)
}
# génération de y conditionnelle à la valeur de x juste obtenue
if(x <= 1) y <- runif(1, min=0, max=1)
else y <- runif(1, min=a, max=a+1)
ech[t+1,] <- c(x, y)
}
plot(ech, xlim=c(0, 3), ylim=c(0, 2.5))
plot(ech[,1], type="l")
plot(ech[,2], type="l")
